What happens when you initialize a repository? Why do you need to do it?
	Initialise a git repository using git init creates a git file but with no commits.  You need to do it so you can track the file changes using the git command.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is holding changes that you've made from your working directory.  But you can still discard the changes or commit them, so it's almost like temporary holding area.

How can you use the staging area to make sure you have one commit per logical change?
	you can verify the changes that are in the staging area using the git diff command which will compare the staging area to the working directory

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	If you are creating alternate solutions of the same problem. If multiple people were attacking the same issue in the code, they could all be working on separate branches.

To see visualisation of branches: git log --graph --oneline master coins

How do the diagrams help you visualize the branch structure?
	They help me understand the flow from commits on the branch structure, especially as they relate to the master and what commits are associated with what branches.

	